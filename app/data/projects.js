const projects = [
  {
    category: "Frontend",
    title: "Personal Portfolio",
    description:
      "This is the site you're currently viewing â€” a fully responsive personal portfolio built using modern frontend technologies. It includes animations, sliders, and dynamic content such as skills, experience, and project previews.",
    stack: [{ name: "React" }, { name: "Next.js" }, { name: "Tailwind CSS" }, { name: "Framer Motion" }],
    thumbnail: "/assets/work/thumb-1.png",
    images: [
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748252222/dqwkulwsogn3v69mnzih.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748252223/spohod7kh2v0vaqqttjq.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748252222/lfjagpueygqd21twfefd.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748252222/u4848hugzcoqck1oeg1s.jpg",
      "/assets/work/thumb-1.png",
    ],
    live: "https://my-landing-page-snowy-nu.vercel.app/",
    github: "https://github.com/Leoric01/my-landing-page",
  },
  {
    category: "backend",
    title: "Projects Manager / Kanban clone",
    description:
      "This is the backend for a usable manager of your projects and tasks. It is a REST API built with Java and Spring Boot, featuring user authentication, project management, and task tracking. The frontend is a separate project that can be found in the GitHub repository. Postman collection is included here: https://projectsmanagment-production.up.railway.app/health/postman ",
    stack: [
      { name: "Java" },
      { name: "Spring Boot" },
      { name: "MySQL" },
      { name: "REST API" },
      { name: "JPA / Hibernate" },
      { name: "JWT security" },
      { name: "Swagger" },
      { name: "OpenApi" },
    ],
    thumbnail: "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748284702/xe4jomhka7qjmlrk8vcu.jpg",
    images: [
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748284702/xe4jomhka7qjmlrk8vcu.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748284705/m7g2n2kbmrxi6rtqegkd.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748284702/nvvtm1msyol2fi4nfr7h.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748284704/i7ubbb0cgzlozwgorco3.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748284703/kdedzbcsanehnlof6unx.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748284701/ajiwerhq4krt9rb8gpr1.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748284779/tdxl5luxo8f1arnevexc.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748285122/px9jy8vxxshw3wkfdkip.jpg",
    ],
    live: "https://projectsmanagment-production.up.railway.app/swagger-ui/index.html",
    github: "https://github.com/Leoric01/projectsmanagment",
  },
  {
    category: "frontend",
    title: "Projects Manager / Kanban clone",
    description:
      "This is the frontend for a usable manager of your projects and tasks. It uses previous backend app, is built with react and vite. Since frontman is not my main, it has some issues im aware of, but it is usable. It features user authentication, project management, and task tracking. The backend is a separate project that can be found in the GitHub repository.",
    stack: [
      { name: "React" },
      { name: "Vite" },
      { name: "TypeScript" },
      { name: "Tailwind CSS" },
      { name: "Axios" },
      { name: "React Router" },
      { name: "JWT security" },
    ],
    thumbnail: "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748292157/nznygcjrpcrk49vra3mw.jpg",
    images: [
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748292158/xlsq3yygdpl00aqnj9dd.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748292155/jayigjrxhq0jwetx8vu3.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748292157/nznygcjrpcrk49vra3mw.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748292161/qoa3wnmg2edivglamgh5.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748292159/pvz7t4thsayuqzozljet.jpg",

      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748292154/ucfkrlymnoydavyuhkal.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748292153/kj1jd3zqi7jann8zmhzb.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748292152/lpmhvetwduvtjb99rulb.jpg",
    ],
    live: "https://projectsmanagment-fe.vercel.app/",
    github: "https://github.com/Leoric01/projectsmanagmentFE",
  },
  {
    category: "full stack / backend and frontend",
    title: "Book Network BACKEND",
    description:
      "Was supposed to be a social network for book users. Features were - registering book, scoring, reviews, ranking, adding visible books to wishlist, borrowing books, and more. The project was abandoned due to lack of time and i was struggling with angular frontend. Backend is in java springboot and is working fine, frontend deffinitely has some issues even tho its usable. Started that to test angular, i liked it but implementing features and fixing bugs was too time consuming for me. I will probably not return to this project in the future.",
    stack: [
      { name: "Java" },
      { name: "Spring Boot" },
      { name: "MySQL" },
      { name: "REST API" },
      { name: "JPA / Hibernate" },
      { name: "JWT security" },
    ],
    thumbnail: "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248000/r3oljyl6f6wkgt1rzuje.jpg",
    images: [
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248001/vqppsvxnea3bvloodenc.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248000/kq3vhyuc0emavk7vcpty.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248000/o1d4pflul7jyelqwnuzv.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248000/rfcjayjvtlm1qn9dxg8p.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248000/g24y0im2ptv2ez4miwu3.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248000/knydhvq0m5sfhmdlgcag.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248000/m8kadweokyqu4rem0pq4.jpg",
    ],
    live: "https://book-network-be-production.up.railway.app/api/v1/health/api",
    github: "https://github.com/Leoric01/Book-Network-BE",
  },
  {
    category: "full stack / backend and frontend",
    title: "Book Network FRONT END",
    description:
      "Was supposed to be a social network for book users. Features were - registering book, scoring, reviews, ranking, adding visible books to wishlist, borrowing books, and more. The project was abandoned due to lack of time and i was struggling with angular frontend. Backend is in java springboot and is working fine, frontend deffinitely has some issues even tho its usable. Started that to test angular, i liked it but implementing features and fixing bugs was too time consuming for me. I will probably not return to this project in the future.",
    stack: [{ name: "JavaScript" }, { name: "Angular" }, { name: "JWT security" }, { name: "Interceptors" }],
    thumbnail: "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248001/r5rdkjxzeg3qzfnjnpaz.jpg",
    images: [
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248001/k8xpxuutcktyhmlez7us.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248001/ogphtifxowiz4c57ilzg.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248001/oyfq6rgfkcsfrc3p8viy.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748248001/r5rdkjxzeg3qzfnjnpaz.jpg",
    ],
    live: "",
    github: "https://github.com/Leoric01/Book-Network-FE",
  },
  {
    category: "Backend / Fullstack",
    title: "Moneta Interview TEST",
    description:
      "A REST API implemented in Java and Spring Boot for a bank interview task. Full task is in github link in readme. The service includes three functionalities: text transformation that reverses input text with vowel capitalization and whitespace normalization; numeric processing involving digit shifting, multiplication, deletion, and division based on specified rules; and a simple ticketing system with endpoints to generate, retrieve, and delete tickets. A quick frontend prototype was built using Thymeleaf.",
    stack: [
      { name: "Java" },
      { name: "Spring Boot" },
      { name: "Thymeleaf" },
      { name: "REST API" },
      { name: "H2 Database" },
    ],
    thumbnail: "/assets/work/moneta.png",
    images: [
      "/assets/work/moneta.png",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748273982/w0unce6vam4g3bxy1sdn.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748273983/edola7szvwplvmfdohzx.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748273985/ft2vpnk1r0dvdee9atfk.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748273983/tdnhxbchdevbw5ctrsmy.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748273984/qzpubi2fa3sanvi0xykj.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748273986/w6snyzndbncglklas8tm.jpg",
    ],
    live: "https://moneta-entry-exam-production.up.railway.app/ui",
    github: "https://github.com/Leoric01/moneta-entry-exam",
  },
  {
    category: "game",
    title: "Tic Tac Toe",
    description:
      "A classic Tic Tac Toe game built with Java using Swing and JPanel. This simple desktop application features a graphical interface, basic game logic, and player turn tracking. It was developed to practice GUI design, event handling, and object-oriented principles in Java.",
    stack: [{ name: "Java" }, { name: "Swing / JPanel" }],
    thumbnail: "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748258600/ky4a96rcfmffkt3gfgy4.jpg",
    images: [
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748258601/caa8hdobae76lwfxm3ub.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748258601/dwxjqxh3qhoglouallal.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748258600/ky4a96rcfmffkt3gfgy4.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748258600/puzityppmltu7elvymem.jpg",
    ],
    live: "",
    github: "https://github.com/Leoric01/TicTacToeGame",
  },
  {
    category: "game",
    title: "Snake Game",
    description:
      "A simple version of the classic Snake game implemented in Java using Swing (JPanel). The game runs as a desktop application and was created to explore basic graphics, game loop timing, and collision logic in Java.",
    stack: [{ name: "Java" }, { name: "Swing / JPanel" }],
    thumbnail: "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748251246/cmsrrqp1mh0itsfvh1c3.png",
    images: [
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748251247/dltfmlazy3sudr0h5gqe.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748251247/sl9jgdpggfqk0jdona0m.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748251246/cmsrrqp1mh0itsfvh1c3.png",
    ],
    live: "",
    github: "https://github.com/Leoric01/SnakeGame",
  },
  {
    category: "terminal app",
    title: "Job Interview Console App",
    description:
      "A small command-line application written as part of a coding challenge for job interview. The app reads a sequence of numbers either from a file or from standard input. Based on the count of numbers (even or odd), it filters and prints only even or odd numbers respectively. Input/output behavior is configurable via command-line arguments. Full task is in github link in readme.",
    stack: [{ name: "Java" }, { name: "File I/O" }],
    thumbnail: "/assets/work/consoleapp.jpg",
    images: [
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748274870/prwuppiy7glfrviqcqde.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748274869/virfcs3hugvlwnkf404x.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748274868/hofzoribwzonrqsqikkn.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748274867/r7rmapk1de4zyxpxh4vg.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748274866/mftgwm2xehzopyl8v6dg.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748274866/k5sr3mxqnsi9qhqnktec.jpg",
      "https://res.cloudinary.com/dz7uwudvw/image/upload/v1748274865/cpy6yygowvcdzsxvxq4w.jpg",
    ],
    live: "",
    github: "https://github.com/Leoric01/TTCExercise",
  },
];
export default projects;
